{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Trokunin\\\\Desktop\\\\Projeto Threeo\\\\FrontEnd\\\\calculadora\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\n/*\r\n* Serviço responsável por realizar a chamada a API\r\n* @author Vinicius Braga Cunha <cunha.vinicius@outlook.com.br>\r\n*/\n\nexport class CalculadoraService {\n  constructor() {}\n\n  calcular(sinal, num1, num2, token) {\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield fetch('https://172.28.32.1:44665/operacao', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            num1,\n            num2,\n            sinal\n          })\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro na chamada da API');\n        }\n\n        const data = yield response.json();\n        return data.resultado;\n      } catch (error) {\n        console.error('Erro:', error);\n        return 0;\n      }\n    })();\n  }\n\n}\nCalculadoraService.SOMA = '+';\nCalculadoraService.SUBTRACAO = '-';\nCalculadoraService.DIVISAO = '/';\nCalculadoraService.MULTIPLICACAO = '*';\n\nCalculadoraService.ɵfac = function CalculadoraService_Factory(t) {\n  return new (t || CalculadoraService)();\n};\n\nCalculadoraService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalculadoraService,\n  factory: CalculadoraService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Trokunin/Desktop/Projeto Threeo/FrontEnd/calculadora/src/app/calculadora/services/calculadora.service.ts"],"names":["i0","CalculadoraService","constructor","calcular","sinal","num1","num2","token","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","resultado","error","console","SOMA","SUBTRACAO","DIVISAO","MULTIPLICACAO","ɵfac","CalculadoraService_Factory","t","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,GAAG,CAAG;;AACXC,EAAAA,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,KAApB,EAA2B;AAAA;AACrC,UAAI;AACA,cAAMC,QAAQ,SAASC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,UAAAA,MAAM,EAAE,MADuD;AAE/DC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,6BAAkB,UAASJ,KAAM;AAF5B,WAFsD;AAM/DK,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,YAAAA,IAAF;AAAQC,YAAAA,IAAR;AAAcF,YAAAA;AAAd,WAAf;AANyD,SAAvC,CAA5B;;AAQA,YAAI,CAACI,QAAQ,CAACO,EAAd,EAAkB;AACd,gBAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,cAAMC,IAAI,SAAST,QAAQ,CAACU,IAAT,EAAnB;AACA,eAAOD,IAAI,CAACE,SAAZ;AACH,OAdD,CAeA,OAAOC,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACA,eAAO,CAAP;AACH;AAnBoC;AAoBxC;;AAtB2B;AAwBhCnB,kBAAkB,CAACqB,IAAnB,GAA0B,GAA1B;AACArB,kBAAkB,CAACsB,SAAnB,GAA+B,GAA/B;AACAtB,kBAAkB,CAACuB,OAAnB,GAA6B,GAA7B;AACAvB,kBAAkB,CAACwB,aAAnB,GAAmC,GAAnC;;AACAxB,kBAAkB,CAACyB,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAI3B,kBAAV,GAAP;AAAyC,CAA5G;;AACAA,kBAAkB,CAAC4B,KAAnB,GAA2B,aAAc7B,EAAE,CAAC8B,kBAAH,CAAsB;AAAEvB,EAAAA,KAAK,EAAEN,kBAAT;AAA6B8B,EAAAA,OAAO,EAAE9B,kBAAkB,CAACyB,IAAzD;AAA+DM,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import * as i0 from \"@angular/core\";\r\n/*\r\n* Serviço responsável por realizar a chamada a API\r\n* @author Vinicius Braga Cunha <cunha.vinicius@outlook.com.br>\r\n*/\r\nexport class CalculadoraService {\r\n    constructor() { }\r\n    async calcular(sinal, num1, num2, token) {\r\n        try {\r\n            const response = await fetch('https://172.28.32.1:44665/operacao', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ num1, num2, sinal }),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Erro na chamada da API');\r\n            }\r\n            const data = await response.json();\r\n            return data.resultado;\r\n        }\r\n        catch (error) {\r\n            console.error('Erro:', error);\r\n            return 0;\r\n        }\r\n    }\r\n}\r\nCalculadoraService.SOMA = '+';\r\nCalculadoraService.SUBTRACAO = '-';\r\nCalculadoraService.DIVISAO = '/';\r\nCalculadoraService.MULTIPLICACAO = '*';\r\nCalculadoraService.ɵfac = function CalculadoraService_Factory(t) { return new (t || CalculadoraService)(); };\r\nCalculadoraService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CalculadoraService, factory: CalculadoraService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}